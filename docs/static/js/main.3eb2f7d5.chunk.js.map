{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","onClick","id","GifGridItem","url","title","className","src","alt","getGifs","a","encodeURI","fetch","response","json","data","gifs","map","image","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","key","GifExpertApp","$divRoot","document","getElementById","ReactDOM","render"],"mappings":"wLAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAkBA,OACE,qCACE,sBAAMC,SAda,SAACC,GACtBA,EAAEC,iBACEJ,EAASK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA8BO,OAC5CN,EAAY,MAUZ,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAUU,SAnBd,SAACP,GAC3BF,EAAYE,EAAEQ,OAAOF,YAoBnB,uBAAOD,KAAK,SAASC,MAAM,mBAAmBG,QAT3B,WACrBd,EAAc,CAAC,MAQ0De,GAAG,iB,OCVjEC,EAdK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,MAAgB,EAATH,GACjC,OACE,0BAASI,UAAU,0CAAnB,UACE,qBAAKC,IAAKH,EAAKI,IAAKH,IACpB,6BAAKA,Q,uBCPEI,EAAO,uCAAG,WAAOpB,GAAP,uBAAAqB,EAAA,6DACbN,EADa,iDACmCO,UAAWtB,GAD9C,gEAEIuB,MAAMR,GAFV,cAEbS,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAW,IAAD,EAC/B,MAAO,CACLhB,GAAIgB,EAAMhB,GACVG,MAAK,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAOb,MACdD,IAAG,UAAEc,EAAMC,cAAR,aAAE,EAAcC,iBAAiBhB,QATrB,kBAaZY,GAbY,4CAAH,sDC2BLK,EAtBC,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAEjB,ECJ0B,SAACA,GAC3B,MAA0BD,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACRhB,EAAQpB,GAAUqC,MAAK,SAACV,GACtBQ,EAAS,CACPT,KAAMC,EACNM,SAAS,SAGZ,CAACjC,IAEGkC,EDVyBI,CAAatC,GAA/B2B,EAAd,EAAQD,KAAYO,EAApB,EAAoBA,QAEpB,OACE,qCACE,oBAAIhB,UAAU,oCAAd,SAAmDjB,IACjDiC,GAAW,mBAAGhB,UAAU,oCAAb,wBACb,0BAASA,UAAU,YAAnB,UACE,sBACCU,EAAKC,KAAI,SAACW,GACT,OAAO,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBC,IAAKD,EAAI1B,gBEKjC4B,EAjBM,WACnB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,qCACE,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGS,EAAWqB,KAAI,SAAC5B,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCTlB0C,G,MAAWC,SAASC,eAAe,SAEzCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.3eb2f7d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = ({ setCategories }) => {\r\n  const [category, setCategory] = useState('');\r\n\r\n  const handleOnChangeInput = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (category.trim().length > 1) {\r\n      setCategories((categories) => [category, ...categories]);\r\n      setCategory('');\r\n    }\r\n  };\r\n\r\n  const handleOnDelete = () => {\r\n    setCategories(['']);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleOnSubmit}>\r\n        <input type='text' value={category} onChange={handleOnChangeInput} />\r\n      </form>\r\n      <input type='submit' value='Limpiar Busqueda' onClick={handleOnDelete} id=\"clearBtn\"/>\r\n    </>\r\n  );\r\n};\r\n\r\nCategoryAdd.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryAdd;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GifGridItem = ({ url, title, id }) => {\r\n  return (\r\n    <section className=\"card animate__animated animate__fadeIn \">\r\n      <img src={url} alt={title}></img>\r\n      <h4>{title}</h4>\r\n    </section>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )} &limit=15&api_key=XldqhgQr2Dgg65t15bK7dGk8ztMOxsTL`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((image) => {\r\n      return {\r\n        id: image.id,\r\n        title: image?.title,\r\n        url: image.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n   };\r\n\r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data: gifs, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\r\n      { loading && <p className=\"animate__animated animate__flash \">loading...</p> }\r\n      <section className='card-grid'>\r\n        <p></p>\r\n        {gifs.map((gif) => {\r\n          return <GifGridItem {...gif} key={gif.id} />;\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) => {\r\n      setState({\r\n        data: gifs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state; // data: [aquí van los gifs o datos que se ejecutan dentro de la petición en fetch]    ---      loading : true\r\n};\r\n","import React, { useState } from \"react\";\r\nimport CategoryAdd from \"./components/CategoryAdd\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One piece\"]);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifApp</h1>\r\n      <CategoryAdd setCategories={setCategories} />\r\n      <hr/>\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nconst $divRoot = document.getElementById(\"root\");\n\nReactDOM.render(<GifExpertApp />, $divRoot);\n\n\n"],"sourceRoot":""}